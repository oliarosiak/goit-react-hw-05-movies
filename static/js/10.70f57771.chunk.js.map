{"version":3,"file":"static/js/10.70f57771.chunk.js","mappings":"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","sources":["api/moviesApi.js","components/loader/Loader.styled.js","components/loader/Loader.jsx","components/movieMainInfo/MovieMainInfo.styled.js","components/movieMainInfo/MovieMainInfo.jsx","components/movieAdditionalInfo/MovieAdditionalInfo.styled.js","components/movieAdditionalInfo/MovieAdditionalInfo.jsx","components/backLink/BackLink.styled.js","components/backLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '184232349777783127dd9be9cacf5c3e';\nconst defaultSettings = 'trending/movie/day';\n\nexport async function trendMoviesApi() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/${defaultSettings}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getReviewsById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&include_adult=false&api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 0 auto;\n`;","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderContainer>\n    <InfinitySpin width=\"450\" color=\"var(--active-color)\" />\n  </LoaderContainer>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const InfoContainer = styled.div`\n  display: flex;  \n  padding: 8px 20px;\n  border-bottom: 2px solid var(--border-color);\n`;\n\nexport const InfoBlock = styled.div`\n  margin-left: 16px;\n  padding: 8px 16px;\n`;\n\nexport const InfoTitle = styled.h2`\nfont-size: 30px;\n  margin-bottom: 16px;\n`;\n\nexport const InfoSubtitle = styled.h3`\n  margin-bottom: 12px;\n`;\n\nexport const InfoText = styled.p`\n  margin-bottom: 20px;\n  color: var(--second-text-color);\n`;\n\nexport const InfoSubtext = styled.span`\ndisplay: inline-block;\n&:not(:last-child) {\n    margin-right: 8px;\n  }\n`\n","import PropTypes from 'prop-types';\nimport { InfoContainer, InfoBlock, InfoTitle, InfoSubtitle, InfoText, InfoSubtext } from './MovieMainInfo.styled';\n\nconst MovieInformation = ({ poster, title, year, score, overview, genres }) => {\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n  const imageUrl =\n    poster === null\n      ? 'https://screench.com/upload/no-poster.jpeg'\n      : `${IMAGE_BASE_URL}${poster}`; \n  \n  return (\n    <InfoContainer>\n      <img src={imageUrl} alt={title} width={250} />\n      <InfoBlock>\n        <InfoTitle>\n          {title} ({year})\n        </InfoTitle>\n        <InfoText>Use score: {score}%</InfoText>\n        <InfoSubtitle>Overview</InfoSubtitle>\n        <InfoText>{overview}</InfoText>\n        <InfoSubtitle>Genres</InfoSubtitle>\n        <InfoText>\n          {genres.map(({ name }) => (\n            <InfoSubtext key={name}>{name}</InfoSubtext>\n          ))}\n        </InfoText>\n      </InfoBlock>\n    </InfoContainer>\n  );\n};\n\nMovieInformation.propTypes = {\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n};\n\nexport default MovieInformation;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AdditionalContainer = styled.div`\n  padding: 8px 20px;\n  border-bottom: 2px solid var(--border-color);\n`;\n\nexport const AdditionalTitle = styled.h3`\n  margin-bottom: 12px;\n`;\n\nexport const AdditionalList = styled.ul`\n  padding: 0 20px;\n`;\n\nexport const AdditionalItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n  color: var(--second-text-color)\n`;","import {\n  AdditionalContainer,\n  AdditionalTitle,\n  AdditionalList,\n  AdditionalItem,\n  AdditionalLink\n} from './MovieAdditionalInfo.styled';\n\nconst MovieAdditionalInfo = () => (\n  <AdditionalContainer>\n    <AdditionalTitle>Additional information</AdditionalTitle>\n    <AdditionalList>\n      <AdditionalItem>\n        <AdditionalLink to=\"cast\">Cast</AdditionalLink>\n      </AdditionalItem>\n      <AdditionalItem>\n        <AdditionalLink to=\"reviews\">Reviews</AdditionalLink>\n      </AdditionalItem>\n    </AdditionalList>\n  </AdditionalContainer>\n);\n\nexport default MovieAdditionalInfo;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLinkBlock = styled.div`\n  padding: 8px 20px;\n`;\n\nexport const BackLinkBtn = styled(NavLink)`\n  display: inline-block;\n  width: 120px;\n  padding: 8px 16px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n  color: var(--main-text-color);\n  background-color: var(--active-color);\n  border: 2px solid var(--border-color);\n`;\n","import PropTypes from 'prop-types';\nimport { BackLinkBtn, BackLinkBlock } from './BackLink.styled';\n\nconst BackLink = ({ linkLocation }) => {\n  console.log(linkLocation);\n  return (\n    <BackLinkBlock>\n      <BackLinkBtn to={linkLocation}>Go back</BackLinkBtn>\n    </BackLinkBlock>\n  );\n};\n\nBackLink.propTypes = { \n  linkLocation: PropTypes.object,\n};\n\nexport default BackLink;\n","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from '../api/moviesApi.js';\nimport MovieMainInfo from 'components/movieMainInfo/MovieMainInfo.jsx';\nimport MovieAdditionalInfo from 'components/movieAdditionalInfo/MovieAdditionalInfo.jsx';\nimport BackLink from 'components/backLink/BackLink.jsx';\nimport Loader from 'components/loader/Loader.jsx';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState('');\n  const [poster, setPoster] = useState('');\n  const [score, setScore] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieById(movieId).then(data => {\n      const {\n        title,\n        poster_path,\n        overview,\n        genres,\n        release_date,\n        vote_average,\n      } = data;\n\n      setTitle(title);\n      setYear(new Date(release_date).getFullYear());\n      setPoster(poster_path);\n      setOverview(overview);\n      setGenres(genres);\n      setScore(Math.round(vote_average * 10));\n    });\n  }, [movieId]);\n \n  return (\n    <div>\n      <BackLink linkLocation={backLinkLocationRef.current} />\n      <MovieMainInfo\n        poster={poster}\n        title={title}\n        year={Number(year)}\n        score={Number(score)}\n        overview={overview}\n        genres={genres}\n      />\n      <MovieAdditionalInfo />\n\n      <Suspense fallback={<Loader />} >\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","defaultSettings","trendMoviesApi","axios","data","console","error","getMovieById","id","getCastById","getReviewsById","searchMovies","query","LoaderContainer","styled","width","color","InfoContainer","InfoBlock","InfoTitle","InfoSubtitle","InfoText","InfoSubtext","poster","title","year","score","overview","genres","imageUrl","src","alt","map","name","AdditionalContainer","AdditionalTitle","AdditionalList","AdditionalItem","AdditionalLink","NavLink","to","BackLinkBlock","BackLinkBtn","linkLocation","log","movieId","useParams","useState","setTitle","setYear","setPoster","setScore","setOverview","setGenres","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","then","poster_path","release_date","vote_average","Date","getFullYear","Math","round","current","MovieMainInfo","Number","Suspense","fallback","Loader"],"sourceRoot":""}