{"version":3,"file":"static/js/550.aedebd06.chunk.js","mappings":"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","sources":["api/moviesApi.js","components/loader/Loader.styled.js","components/loader/Loader.jsx","components/movieList/MoviesList.styled.js","components/movieList/MoviesList.jsx","components/searchMovieForm/MovieForm.styled.js","components/searchMovieForm/MovieForm.jsx","pages/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '184232349777783127dd9be9cacf5c3e';\nconst defaultSettings = 'trending/movie/day';\n\nexport async function trendMoviesApi() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/${defaultSettings}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getReviewsById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&include_adult=false&api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 0 auto;\n`;","import { InfinitySpin } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderContainer>\n    <InfinitySpin width=\"450\" color=\"var(--active-color)\" />\n  </LoaderContainer>\n);\n\nexport default Loader;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListContainer = styled.ul`\n  margin-top: 16px;\n  padding: 8px 16px;\n\n`;\n\nexport const StyledLink = styled(NavLink)` \n  color: inherit;\n  font-size: 20px;\n\n  &.active {\n    color: var(--active-color);\n    text-decoration: underline;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ListContainer, StyledLink } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, location }) => (\n  <ListContainer>\n    {movies.map(({ id, title }) => (\n      <StyledLink key={id} to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </StyledLink>\n    ))}\n  </ListContainer>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 8px 20px;\n  border-bottom: 2px solid var(--border-color);\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  margin-right: 8px;\n  padding: 8px 16px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Form, Input, Button } from './MovieForm.styled';\n\nconst MovieForm = ({ onSubmit }) => (\n  <Form onSubmit={onSubmit}>    \n    <Input\n      name=\"query\"\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Enter movie name\"\n    />\n    <Button type=\"submit\">search</Button>\n  </Form>\n);\n\nMovieForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MovieForm;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovies } from '../api/moviesApi.js';\nimport MovieForm from 'components/searchMovieForm/MovieForm.jsx';\nimport MoviesList from 'components/movieList/MoviesList.jsx';\nimport Loader from 'components/loader/Loader.jsx';\n\nconst MoviePage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const userInput = searchParams.get('userInput') ?? '';\n  const [findingMovies, setFindingMovies] = useState([]);\n  const location = useLocation();\n\n  const formHandler = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const query = form.query.value;\n\n    if (query.trim() === '') {\n      alert('need movie name');\n      form.reset();\n      return;\n    }\n\n    setSearchParams({ userInput: query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!userInput) {\n      return;\n    }\n    searchMovies(userInput).then(data => {\n      const { results } = data;\n      setFindingMovies(results);\n    });\n  }, [userInput]); \n\n  return (\n    <div>\n      <MovieForm onSubmit={formHandler} />\n      <MoviesList movies={findingMovies} location={location} />\n\n      <Suspense fallback={<Loader />} >\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviePage;\n"],"names":["BASE_URL","API_KEY","defaultSettings","trendMoviesApi","axios","data","console","error","getMovieById","id","getCastById","getReviewsById","searchMovies","query","LoaderContainer","styled","width","color","ListContainer","StyledLink","NavLink","movies","location","map","title","to","state","from","Form","Input","Button","onSubmit","name","type","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","userInput","get","useState","findingMovies","setFindingMovies","useLocation","useEffect","then","results","event","preventDefault","form","currentTarget","value","trim","alert","reset","MoviesList","Suspense","fallback","Loader"],"sourceRoot":""}