{"version":3,"file":"static/js/695.1845efce.chunk.js","mappings":"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","sources":["api/moviesApi.js","components/loader/Loader.jsx","components/movieMainInfo/MovieMainInfo.jsx","components/movieAdditionalInfo/MovieAdditionalInfo.jsx","components/backLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '184232349777783127dd9be9cacf5c3e';\nconst defaultSettings = 'trending/movie/day';\n\nexport async function trendMoviesApi() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/${defaultSettings}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function getReviewsById(id) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&include_adult=false&api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n","import { InfinitySpin } from 'react-loader-spinner';\n// import css from './Loader.module.css';\n\nconst Loader = () => (\n  <div>\n    <InfinitySpin width=\"200\" color=\"#4fa94d\" />\n  </div>\n);\n\nexport default Loader;\n","import PropTypes from 'prop-types';\n\nconst MovieInformation = ({ poster, title, year, score, overview, genres }) => {\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n  const imageUrl =\n    poster === null\n      ? 'https://screench.com/upload/no-poster.jpeg'\n      : `${IMAGE_BASE_URL}${poster}`; \n  \n  return (\n    <div style={{ display: 'flex' }}>\n      <img src={imageUrl} alt={title} width={150} />\n      <div>\n        <h3>\n          {title} ({year})\n        </h3>\n        <p>Use score: {score}%</p>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>\n          {genres.map(({ name }) => (\n            <span key={name}>{name}</span>\n          ))}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nMovieInformation.propTypes = {\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n};\n\nexport default MovieInformation;\n","import { Link } from 'react-router-dom';\n\nconst MovieAdditionalInfo = () => (\n  <div>\n    <h4>Additional information</h4>\n    <ul>\n      <li>\n        <Link to=\"cast\">Cast</Link>\n      </li>\n      <li>\n        <Link to=\"reviews\">Reviews</Link>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default MovieAdditionalInfo;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ linkLocation }) => <Link to={linkLocation}>Go back</Link>;\n\nBackLink.propTypes = {\n  linkLocation: PropTypes.object.isRequired,\n};\n\nexport default BackLink;\n","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from '../api/moviesApi.js';\nimport MovieMainInfo from 'components/movieMainInfo/MovieMainInfo.jsx';\nimport MovieAdditionalInfo from 'components/movieAdditionalInfo/MovieAdditionalInfo.jsx';\nimport BackLink from 'components/backLink/BackLink.jsx';\nimport Loader from 'components/loader/Loader.jsx';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState('');\n  const [poster, setPoster] = useState('');\n  const [score, setScore] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieById(movieId).then(data => {\n      const {\n        title,\n        poster_path,\n        overview,\n        genres,\n        release_date,\n        vote_average,\n      } = data;\n\n      setTitle(title);\n      setYear(new Date(release_date).getFullYear());\n      setPoster(poster_path);\n      setOverview(overview);\n      setGenres(genres);\n      setScore(Math.round(vote_average * 10));\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackLink linkLocation={backLinkLocationRef.current} />\n      <MovieMainInfo\n        poster={poster}\n        title={title}\n        year={Number(year)}\n        score={Number(score)}\n        overview={overview}\n        genres={genres}\n      />\n      <MovieAdditionalInfo />\n\n      <Suspense fallback={<Loader />} >\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","defaultSettings","trendMoviesApi","axios","data","console","error","getMovieById","id","getCastById","getReviewsById","searchMovies","query","width","color","poster","title","year","score","overview","genres","imageUrl","style","display","src","alt","map","name","Link","to","linkLocation","movieId","useParams","useState","setTitle","setYear","setPoster","setScore","setOverview","setGenres","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","then","poster_path","release_date","vote_average","Date","getFullYear","Math","round","current","MovieMainInfo","Number","Suspense","fallback","Loader"],"sourceRoot":""}